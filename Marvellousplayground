local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==2) then function v33()local v43=0;local v44;while true do if (0==v43) then v44=v9(v27,v30,v30);v30=v30 + (932 -(857 + 74)) ;v43=1;end if (v43==1) then return v44;end end end v34=nil;function v34()local v45=0;local v46;local v47;while true do if (v45==0) then v46,v47=v9(v27,v30,v30 + (570 -(367 + 201)) );v30=v30 + 2 ;v45=1;end if (v45==1) then return (v47 * 256) + v46 ;end end end v29=3;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\247\66","\204\217\108\227\65\98\85"),function(v48)if (v9(v48,2)==79) then v31=v8(v11(v48,2 -1 ,2 -1 ));return "";else local v81=0;local v82;while true do if (v81==0) then v82=v10(v8(v48,16));if v31 then local v119=0;local v120;while true do if (v119==1) then return v120;end if (v119==0) then v120=v13(v82,v31);v31=nil;v119=1;end end else return v82;end break;end end end end);v29=1;end if (v29==3) then v35=nil;function v35()local v49=0;local v50;local v51;local v52;local v53;while true do if (1==v49) then return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end if (v49==0) then v50,v51,v52,v53=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v49=1;end end end v36=nil;v29=4;end if (v29==4) then function v36()local v54=v35();local v55=v35();local v56=1;local v57=(v32(v55,1,20) * (2^(959 -(214 + 713)))) + v54 ;local v58=v32(v55,21,31);local v59=((v32(v55,32)==1) and  -1) or 1 ;if (v58==0) then if (v57==0) then return v59 * 0 ;else v58=1;v56=0 + 0 ;end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-(161 + 862) ) * (v56 + (v57/(2^52))) ;end v37=nil;function v37(v60)local v61=0;local v62;local v63;while true do if (v61==0) then v62=nil;if  not v60 then local v115=0;while true do if (v115==0) then v60=v35();if (v60==0) then return "";end break;end end end v61=1;end if (v61==3) then return v14(v63);end if (v61==1) then v62=v11(v27,v30,(v30 + v60) -1 );v30=v30 + v60 ;v61=2;end if (v61==2) then v63={};for v90=1, #v62 do v63[v90]=v10(v9(v11(v62,v90,v90)));end v61=3;end end end v29=5;end if (v29==7) then function v41(v64,v65,v66)local v67=0;local v68;local v69;local v70;while true do if (v67==0) then v68=v64[1];v69=v64[2];v67=1;end if (1==v67) then v70=v64[3];return function(...)local v92=v68;local v93=v69;local v94=v70;local v95=v39;local v96=1;local v97= -1;local v98={};local v99={...};local v100=v20("#",...) -1 ;local v101={};local v102={};for v116=0,v100 do if (v116>=v94) then v98[v116-v94 ]=v99[v116 + 1 ];else v102[v116]=v99[v116 + 1 ];end end local v103=(v100-v94) + 1 ;local v104;local v105;while true do v104=v92[v96];v105=v104[1];if (v105<=47) then if (v105<=23) then if (v105<=11) then if (v105<=5) then if (v105<=2) then if (v105<=0) then local v140=0;local v141;while true do if (v140==0) then v141=v104[2];v102[v141]=v102[v141](v21(v102,v141 + (2 -1) ,v104[3]));break;end end elseif (v105==1) then v102[v104[2]]=v102[v104[5 -2 ]]%v102[v104[4]] ;else local v210=0;local v211;local v212;local v213;while true do if (0==v210) then v211=v104[2];v212=v102[v211];v210=1;end if (v210==1) then v213=v104[3];for v438=1,v213 do v212[v438]=v102[v211 + v438 ];end break;end end end elseif (v105<=3) then local v142=0;local v143;local v144;local v145;while true do if (v142==0) then v143=v104[2];v144={v102[v143](v21(v102,v143 + 1 ,v97))};v142=1;end if (1==v142) then v145=0;for v366=v143,v104[4] do local v367=0;while true do if (0==v367) then v145=v145 + (1 -0) ;v102[v366]=v144[v145];break;end end end break;end end elseif (v105>4) then local v214=0;local v215;while true do if (v214==0) then v215=v104[2];do return v102[v215](v21(v102,v215 + 1 ,v104[3]));end break;end end else for v336=v104[2],v104[3] do v102[v336]=nil;end end elseif (v105<=8) then if (v105<=6) then local v146=0;local v147;local v148;local v149;while true do if (v146==0) then v147=v104[352 -(87 + 263) ];v148=v102[v147];v146=1;end if (1==v146) then v149=v104[3];for v368=1,v149 do v148[v368]=v102[v147 + v368 ];end break;end end elseif (v105==7) then if  not v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end else v102[v104[2]]=v102[v104[3]];end elseif (v105<=9) then if (v102[v104[182 -(67 + 113) ]]~=v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105>10) then if (v102[v104[2]]==v104[4]) then v96=v96 + 1 ;else v96=v104[3];end else local v219=0;local v220;while true do if (v219==0) then v220=v104[2];v102[v220]=v102[v220](v102[v220 + 1 ]);break;end end end elseif (v105<=(13 + 4)) then if (v105<=14) then if (v105<=12) then v102[v104[2]]=v102[v104[3]]%v104[4] ;elseif (v105==13) then v102[v104[4 -2 ]]=v102[v104[3]]%v102[v104[4]] ;else v102[v104[2]]=v104[3];end elseif (v105<=15) then local v151=0;local v152;local v153;local v154;local v155;while true do if (v151==1) then v97=(v154 + v152) -1 ;v155=0;v151=2;end if (v151==2) then for v373=v152,v97 do local v374=0;while true do if (v374==0) then v155=v155 + 1 ;v102[v373]=v153[v155];break;end end end break;end if (v151==0) then v152=v104[2];v153,v154=v95(v102[v152](v21(v102,v152 + 1 ,v104[3])));v151=1;end end elseif (v105>(12 + 4)) then v102[v104[2]]=v41(v93[v104[3]],nil,v66);else local v225=v104[2];local v226=v104[4];local v227=v225 + 2 ;local v228={v102[v225](v102[v225 + 1 ],v102[v227])};for v342=1,v226 do v102[v227 + v342 ]=v228[v342];end local v229=v228[1];if v229 then local v375=0;while true do if (v375==0) then v102[v227]=v229;v96=v104[3];break;end end else v96=v96 + 1 ;end end elseif (v105<=20) then if (v105<=18) then local v156=0;local v157;local v158;while true do if (v156==1) then for v376=v157 + 1 ,v97 do v15(v158,v102[v376]);end break;end if (v156==0) then v157=v104[2];v158=v102[v157];v156=1;end end elseif (v105>(75 -56)) then local v230=0;local v231;local v232;local v233;while true do if (0==v230) then v231=v104[2];v232=v102[v231 + 2 ];v230=1;end if (v230==1) then v233=v102[v231] + v232 ;v102[v231]=v233;v230=2;end if (v230==2) then if (v232>(952 -(802 + 150))) then if (v233<=v102[v231 + 1 ]) then local v483=0;while true do if (v483==0) then v96=v104[3];v102[v231 + 3 ]=v233;break;end end end elseif (v233>=v102[v231 + 1 ]) then local v484=0;while true do if (0==v484) then v96=v104[3];v102[v231 + 3 ]=v233;break;end end end break;end end else v102[v104[5 -3 ]][v104[3]]=v102[v104[4]];end elseif (v105<=21) then v102[v104[3 -1 ]]=v102[v104[3]] * v102[v104[4]] ;elseif (v105>22) then v102[v104[2]]=v102[v104[3]][v104[4]];else v102[v104[2]]=v41(v93[v104[3]],nil,v66);end elseif (v105<=35) then if (v105<=29) then if (v105<=26) then if (v105<=24) then v102[v104[2]]=v102[v104[3]] + v104[4] ;elseif (v105==25) then v102[v104[2]]={};else v102[v104[2]]={};end elseif (v105<=(20 + 7)) then local v161=0;local v162;local v163;local v164;while true do if (v161==2) then for v377=1,v104[1001 -(915 + 82) ] do local v378=0;local v379;while true do if (v378==0) then v96=v96 + 1 ;v379=v92[v96];v378=1;end if (v378==1) then if (v379[1]==8) then v164[v377-(2 -1) ]={v102,v379[3]};else v164[v377-1 ]={v65,v379[3]};end v101[ #v101 + 1 ]=v164;break;end end end v102[v104[2]]=v41(v162,v163,v66);break;end if (1==v161) then v164={};v163=v18({},{[v7("\97\252\252\235\40\197\70","\160\62\163\149\133\76")]=function(v380,v381)local v382=0;local v383;while true do if (0==v382) then v383=v164[v381];return v383[1][v383[2]];end end end,[v7("\233\159\3\42\212\223\174\9\42\219","\163\182\192\109\79")]=function(v384,v385,v386)local v387=0;local v388;while true do if (v387==0) then v388=v164[v385];v388[1][v388[2]]=v386;break;end end end});v161=2;end if (0==v161) then v162=v93[v104[3]];v163=nil;v161=1;end end elseif (v105==28) then local v241=0;local v242;while true do if (v241==0) then v242=v104[2 + 0 ];v102[v242]=v102[v242](v21(v102,v242 + 1 ,v97));break;end end else do return;end end elseif (v105<=32) then if (v105<=30) then local v165=0;local v166;while true do if (v165==0) then v166=v104[2 -0 ];v102[v166](v21(v102,v166 + 1 ,v97));break;end end elseif (v105==31) then v102[v104[2]]=v104[1190 -(1069 + 118) ] + v102[v104[4]] ;else do return v102[v104[2]]();end end elseif (v105<=33) then local v167=0;local v168;local v169;local v170;local v171;while true do if (v167==2) then for v389=v168,v97 do local v390=0;while true do if (v390==0) then v171=v171 + 1 ;v102[v389]=v169[v171];break;end end end break;end if (v167==0) then v168=v104[2];v169,v170=v95(v102[v168](v21(v102,v168 + 1 ,v104[3])));v167=1;end if (v167==1) then v97=(v170 + v168) -1 ;v171=0 -0 ;v167=2;end end elseif (v105>(73 -39)) then if  not v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end else local v244=0;local v245;local v246;local v247;while true do if (v244==0) then v245=v93[v104[1 + 2 ]];v246=nil;v244=1;end if (v244==2) then for v441=1,v104[4] do local v442=0;local v443;while true do if (v442==1) then if (v443[1]==8) then v247[v441-1 ]={v102,v443[4 -1 ]};else v247[v441-(1 + 0) ]={v65,v443[3]};end v101[ #v101 + 1 ]=v247;break;end if (v442==0) then v96=v96 + 1 ;v443=v92[v96];v442=1;end end end v102[v104[2]]=v41(v245,v246,v66);break;end if (v244==1) then v247={};v246=v18({},{[v7("\11\25\9\206\241\49\62","\149\84\70\96\160")]=function(v444,v445)local v446=0;local v447;while true do if (v446==0) then v447=v247[v445];return v447[1][v447[2]];end end end,[v7("\7\57\3\232\47\15\3\233\61\30","\141\88\102\109")]=function(v448,v449,v450)local v451=0;local v452;while true do if (v451==0) then v452=v247[v449];v452[1][v452[2]]=v450;break;end end end});v244=2;end end end elseif (v105<=41) then if (v105<=38) then if (v105<=36) then local v172=0;local v173;local v174;while true do if (v172==1) then for v392=v173 + 1 ,v97 do v15(v174,v102[v392]);end break;end if (v172==0) then v173=v104[2];v174=v102[v173];v172=1;end end elseif (v105>37) then do return;end else v102[v104[2]]=v66[v104[3]];end elseif (v105<=39) then v102[v104[2]]=v104[3] + v102[v104[795 -(368 + 423) ]] ;elseif (v105==(125 -85)) then v102[v104[20 -(10 + 8) ]]=v102[v104[3]]%v104[4] ;else local v251=v104[7 -5 ];v102[v251]=v102[v251](v21(v102,v251 + (443 -(416 + 26)) ,v104[3]));end elseif (v105<=44) then if (v105<=42) then for v206=v104[2],v104[9 -6 ] do v102[v206]=nil;end elseif (v105>43) then local v253=0;local v254;while true do if (v253==0) then v254=v104[2];v102[v254](v102[v254 + 1 ]);break;end end else local v255=0;local v256;while true do if (v255==0) then v256=v104[2];v102[v256]=v102[v256](v21(v102,v256 + 1 ,v97));break;end end end elseif (v105<=(20 + 25)) then local v176=0;local v177;while true do if (0==v176) then v177=v104[2];do return v21(v102,v177,v97);end break;end end elseif (v105==46) then v102[v104[2]]=v66[v104[3]];else v102[v104[2]]=v102[v104[3]][v104[4]];end elseif (v105<=71) then if (v105<=59) then if (v105<=53) then if (v105<=50) then if (v105<=48) then local v178=0;local v179;while true do if (v178==0) then v179=v104[2];v102[v179]=v102[v179](v102[v179 + 1 ]);break;end end elseif (v105>49) then local v261=v104[2];v102[v261](v21(v102,v261 + 1 ,v104[3]));else local v262=v104[2];local v263=v104[4];local v264=v262 + 2 ;local v265={v102[v262](v102[v262 + 1 ],v102[v264])};for v356=1 -0 ,v263 do v102[v264 + v356 ]=v265[v356];end local v266=v265[1];if v266 then v102[v264]=v266;v96=v104[3];else v96=v96 + 1 ;end end elseif (v105<=51) then local v180=0;local v181;while true do if (v180==0) then v181=v104[440 -(145 + 293) ];v102[v181](v21(v102,v181 + 1 ,v104[3]));break;end end elseif (v105==52) then v102[v104[2]][v104[3]]=v102[v104[4]];else v96=v104[3];end elseif (v105<=56) then if (v105<=54) then v102[v104[2]][v102[v104[3]]]=v104[4];elseif (v105>(485 -(44 + 386))) then local v270=0;local v271;while true do if (v270==0) then v271=v104[2];do return v21(v102,v271,v97);end break;end end elseif v102[v104[2]] then v96=v96 + (1487 -(998 + 488)) ;else v96=v104[3];end elseif (v105<=57) then if v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end elseif (v105==58) then if (v104[2]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end else v102[v104[1 + 1 ]]=v104[3]~=0 ;end elseif (v105<=65) then if (v105<=62) then if (v105<=60) then local v184=v104[2];local v185=v102[v184 + 2 ];local v186=v102[v184] + v185 ;v102[v184]=v186;if (v185>0) then if (v186<=v102[v184 + 1 ]) then local v397=0;while true do if (v397==0) then v96=v104[3];v102[v184 + 3 ]=v186;break;end end end elseif (v186>=v102[v184 + 1 ]) then local v398=0;while true do if (v398==0) then v96=v104[3];v102[v184 + 3 + 0 ]=v186;break;end end end elseif (v105>61) then if (v104[774 -(201 + 571) ]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end else v102[v104[2]][v102[v104[3]]]=v102[v104[4]];end elseif (v105<=63) then local v188=0;local v189;while true do if (0==v188) then v189=v104[2];do return v102[v189](v21(v102,v189 + 1 ,v104[3]));end break;end end elseif (v105>64) then v102[v104[2]]=v65[v104[3]];else local v278=0;local v279;local v280;local v281;local v282;while true do if (v278==2) then for v453=v279,v97 do local v454=0;while true do if (v454==0) then v282=v282 + 1 ;v102[v453]=v280[v282];break;end end end break;end if (v278==1) then v97=(v281 + v279) -1 ;v282=0;v278=2;end if (v278==0) then v279=v104[2];v280,v281=v95(v102[v279](v21(v102,v279 + 1 ,v97)));v278=1;end end end elseif (v105<=68) then if (v105<=(1204 -(116 + 1022))) then v102[v104[2]][v102[v104[12 -9 ]]]=v104[4];elseif (v105==67) then local v283=0;local v284;while true do if (0==v283) then v284=v104[2];v102[v284]=v102[v284]();break;end end else v102[v104[2]]=v104[3];end elseif (v105<=69) then v102[v104[2]]=v102[v104[3]] * v102[v104[4]] ;elseif (v105==70) then local v287=v104[2];local v288,v289=v95(v102[v287](v21(v102,v287 + 1 + 0 ,v97)));v97=(v289 + v287) -1 ;local v290=0;for v361=v287,v97 do local v362=0;while true do if (v362==0) then v290=v290 + 1 ;v102[v361]=v288[v290];break;end end end else local v291=0;local v292;while true do if (v291==0) then v292=v104[7 -5 ];v102[v292]=v102[v292]();break;end end end elseif (v105<=83) then if (v105<=77) then if (v105<=74) then if (v105<=72) then v102[v104[2]]=v104[3]~=0 ;elseif (v105>73) then v102[v104[2]]=v102[v104[10 -7 ]] + v104[4] ;elseif (v102[v104[2]]==v104[4]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=75) then v102[v104[2]][v102[v104[3]]]=v102[v104[4]];elseif (v105==76) then local v294=0;local v295;local v296;local v297;while true do if (v294==1) then v297=859 -(814 + 45) ;for v457=v295,v104[4] do local v458=0;while true do if (v458==0) then v297=v297 + 1 ;v102[v457]=v296[v297];break;end end end break;end if (v294==0) then v295=v104[2];v296={v102[v295](v21(v102,v295 + 1 ,v97))};v294=1;end end else v102[v104[4 -2 ]]= #v102[v104[3]];end elseif (v105<=80) then if (v105<=(5 + 73)) then local v196=0;local v197;while true do if (v196==0) then v197=v104[2];v102[v197](v102[v197 + 1 ]);break;end end elseif (v105==79) then v102[v104[2]]=v65[v104[3]];else v96=v104[3];end elseif (v105<=81) then do return v102[v104[1 + 1 ]]();end elseif (v105>82) then v102[v104[2]]();else v102[v104[2]]= #v102[v104[888 -(261 + 624) ]];end elseif (v105<=89) then if (v105<=86) then if (v105<=84) then local v198=0;local v199;local v200;local v201;local v202;while true do if (1==v198) then v97=(v201 + v199) -1 ;v202=0;v198=2;end if (v198==0) then v199=v104[2];v200,v201=v95(v102[v199](v102[v199 + 1 ]));v198=1;end if (2==v198) then for v401=v199,v97 do local v402=0;while true do if (v402==0) then v202=v202 + 1 ;v102[v401]=v200[v202];break;end end end break;end end elseif (v105==85) then v102[v104[2]]=v102[v104[3]];else local v305=0;local v306;local v307;local v308;while true do if (v305==0) then v306=v104[2];v307=v102[v306];v305=1;end if (v305==1) then v308=v102[v306 + 2 ];if (v308>0) then if (v307>v102[v306 + 1 ]) then v96=v104[3];else v102[v306 + 3 ]=v307;end elseif (v307<v102[v306 + 1 ]) then v96=v104[3];else v102[v306 + 3 ]=v307;end break;end end end elseif (v105<=87) then local v203=v104[2];local v204=v102[v203];local v205=v102[v203 + 2 ];if (v205>0) then if (v204>v102[v203 + 1 ]) then v96=v104[3];else v102[v203 + 3 ]=v204;end elseif (v204<v102[v203 + 1 ]) then v96=v104[3];else v102[v203 + (4 -1) ]=v204;end elseif (v105>88) then v102[v104[2]]=v102[v104[3]][v102[v104[4]]];else local v311=0;local v312;local v313;while true do if (v311==1) then for v459=v312 + 1 ,v104[3] do v15(v313,v102[v459]);end break;end if (v311==0) then v312=v104[2];v313=v102[v312];v311=1;end end end elseif (v105<=92) then if (v105<=90) then v102[v104[2]]();elseif (v105==91) then local v314=v104[2];local v315=v102[v104[3]];v102[v314 + 1 ]=v315;v102[v314]=v315[v104[4]];else local v319=0;local v320;while true do if (v319==0) then v320=v104[2];v102[v320](v21(v102,v320 + 1 ,v97));break;end end end elseif (v105<=94) then if (v105==(1173 -(1020 + 60))) then v102[v104[2]]=v102[v104[3]][v102[v104[4]]];elseif (v102[v104[2]]~=v102[v104[4]]) then v96=v96 + (1424 -(630 + 793)) ;else v96=v104[3];end elseif (v105==95) then local v323=0;local v324;local v325;local v326;local v327;while true do if (v323==1) then v97=(v326 + v324) -1 ;v327=0;v323=2;end if (v323==2) then for v460=v324,v97 do local v461=0;while true do if (v461==0) then v327=v327 + 1 ;v102[v460]=v325[v327];break;end end end break;end if (0==v323) then v324=v104[2];v325,v326=v95(v102[v324](v102[v324 + 1 ]));v323=1;end end else local v328=v104[2];local v329=v102[v104[3]];v102[v328 + 1 ]=v329;v102[v328]=v329[v104[4]];end v96=v96 + 1 ;end end;end end end return v41(v40(),{},v28)(...);end if (v29==6) then v40=nil;function v40()local v71=0;local v72;local v73;local v74;local v75;local v76;local v77;while true do if (v71==3) then for v106=1,v35() do v73[v106-1 ]=v40();end return v75;end if (v71==1) then v75={v72,v73,nil,v74};v76=v35();v77={};v71=2;end if (2==v71) then for v108=1638 -(1523 + 114) ,v76 do local v109=0;local v110;local v111;while true do if (v109==1) then if (v110==1) then v111=v33()~=0 ;elseif (v110==2) then v111=v36();elseif (v110==(3 + 0)) then v111=v37();end v77[v108]=v111;break;end if (v109==0) then v110=v33();v111=nil;v109=1;end end end v75[3]=v33();for v112=1,v35() do local v113=0;local v114;while true do if (v113==0) then v114=v33();if (v32(v114,1 -0 ,1066 -(68 + 997) )==0) then local v126=0;local v127;local v128;local v129;while true do if (v126==2) then if (v32(v128,1,1)==1) then v129[2]=v77[v129[2]];end if (v32(v128,2,2)==(958 -(892 + 65))) then v129[3]=v77[v129[3]];end v126=3;end if (v126==3) then if (v32(v128,3,3)==1) then v129[4]=v77[v129[4]];end v72[v112]=v129;break;end if (v126==1) then v129={v34(),v34(),nil,nil};if (v127==0) then v129[1273 -(226 + 1044) ]=v34();v129[4]=v34();elseif (v127==1) then v129[3]=v35();elseif (v127==2) then v129[12 -9 ]=v35() -(2^16) ;elseif (v127==3) then local v365=0;while true do if (v365==0) then v129[120 -(32 + 85) ]=v35() -(2^(16 + 0)) ;v129[1 + 3 ]=v34();break;end end end v126=2;end if (v126==0) then v127=v32(v114,2,3);v128=v32(v114,4,6);v126=1;end end end break;end end end v71=3;end if (v71==0) then v72={};v73={};v74={};v71=1;end end end v41=nil;v29=7;end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==1) then v32=nil;function v32(v78,v79,v80)if v80 then local v83=0;local v84;while true do if (v83==0) then v84=(v78/(2^(v79-(1 -0))))%(2^(((v80-1) -(v79-1)) + (2 -1))) ;return v84-(v84%1) ;end end else local v85=2^(v79-1) ;return (((v78%(v85 + v85))>=v85) and 1) or (619 -(555 + 64)) ;end end v33=nil;v29=2;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \Obfuscated by yourmomma :) 

]]--

